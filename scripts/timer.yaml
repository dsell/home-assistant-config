      
reset_timer:
  alias: "Reset Timer"
  sequence:
    # Cancel ev. old timers
    - service: timer.cancel
      data:
         entity_id: timer.user_timer
    # Set new timer
    - service: script.start_timer
      data_template:
        delay: '{{"%0.02d" | format(delay_hours|int)}}:{{"%0.02d" | format(delay_minutes|int)}}:{{"%0.02d" | format(delay_seconds|int)}}'
#        alarmtopic: '{{alarmtopic}}'

start_timer:
  alias: "Start Timer"
  sequence:
     - service: timer.start
       entity_id: timer.user_timer
       data_template:
         duration: '{{ delay }}'
         
remaining_timer:
    sequence:
      - service: shell_command.say
        data_template: 
          message: >
            'Time remaining 
            {% set t = states.timer.user_timer.attributes.remaining.split(":") %}
            {% if t[0] > 0 %}
            {{ t[0] }} hours,
            {% endif %}
            {% if t[1] > 0 %}
            {{ t[1] }} minutes,
            {% endif %}
            {% if t[2] > 0 %}
            {{ t[2] }} seconds.
            {% endif %}'            
          dest_id: default